{"version":3,"sources":["Task.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","margin","spacing","extendedIcon","marginRight","root","width","maxWidth","backgroundColor","palette","background","paper","multiline","wordWrap","Task","items","removeItem","editItem","classes","List","component","className","map","item","id","title","ListItem","alignItems","ListItemText","disableTypography","primaryTypographyProps","style","whiteSpace","ListItemSecondaryAction","IconButton","onClick","fontSize","App","useState","name","setName","localStorage","getItem","JSON","parse","list","setList","isEditing","setIsEditing","editID","setEditID","useEffect","setItem","stringify","Container","onSubmit","e","preventDefault","newItem","Date","getTime","toString","TextField","label","value","fullWidth","onChange","target","Button","variant","size","color","type","length","filter","specificItem","find","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fb65bebf.chunk.js","sourcesContent":["import React from \"react\";\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {IconButton, List, ListItem, ListItemSecondaryAction, ListItemText, makeStyles} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    margin: {\n        margin: theme.spacing(1),\n    },\n    extendedIcon: {\n        marginRight: theme.spacing(1),\n    },\n    root: {\n        width: '100%',\n        maxWidth: 600,\n        backgroundColor: theme.palette.background.paper,\n    },\n    multiline: {\n        '& span': {\n            width: '80%',\n        },\n        wordWrap: 'break-word',\n    }\n}));\n\nconst Task = ({items, removeItem, editItem}) => {\n    const classes = useStyles();\n\n    return (\n        <List component=\"nav\" aria-label=\"main mailbox folders\" className={classes.root}>\n            {items.map((item) => {\n                const {id, title} = item;\n                return (\n                    <ListItem key={id} alignItems=\"flex-start\">\n                        <ListItemText disableTypography={false}\n                                      primaryTypographyProps={{ style: { whiteSpace: \"normal\" } }}\n                                      className={classes.multiline}>\n                            {title}\n                        </ListItemText>\n                        <ListItemSecondaryAction>\n                            <IconButton aria-label=\"delete\"\n                                        className={classes.margin}\n                                        onClick={() => editItem(id)}>\n                                <EditIcon fontSize=\"small\"/>\n                            </IconButton>\n                            <IconButton aria-label=\"delete\"\n                                        className={classes.margin}\n                                        onClick={() => removeItem(id)}>\n                                <DeleteIcon fontSize=\"small\"/>\n                            </IconButton>\n                        </ListItemSecondaryAction>\n                    </ListItem>\n                );\n            })}\n        </List>\n    );\n};\n\nexport default Task;","import React, {useState, useEffect} from \"react\";\nimport Task from \"./Task\";\nimport \"./App.css\";\nimport {Button, Container, makeStyles, TextField} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    margin: {\n        margin: theme.spacing(1),\n    },\n    extendedIcon: {\n        marginRight: theme.spacing(1),\n    },\n}));\n\nconst getLocalStorage = () => {\n    let list = localStorage.getItem(\"list\");\n    if (list) {\n        return (list = JSON.parse(localStorage.getItem(\"list\")));\n    } else {\n        return [];\n    }\n};\n\nexport const App = () => {\n    const classes = useStyles();\n\n    const [name, setName] = useState(\"\");\n    const [list, setList] = useState(getLocalStorage());\n    const [isEditing, setIsEditing] = useState(false);\n    const [editID, setEditID] = useState(null);\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (name) {\n            if (name && isEditing) {\n                setList(\n                    list.map((item) => {\n                        if (item.id === editID) {\n                            return {...item, title: name};\n                        }\n                        return item;\n                    })\n                );\n                setName(\"\");\n                setEditID(null);\n                setIsEditing(false);\n            } else {\n                const newItem = {id: new Date().getTime().toString(), title: name};\n\n                setList([...list, newItem]);\n                setName(\"\");\n            }\n        }\n    }\n\n\n    const removeItem = (id) => {\n        setList(list.filter((item) => item.id !== id));\n    };\n    const editItem = (id) => {\n        const specificItem = list.find((item) => item.id === id);\n        setIsEditing(true);\n        setEditID(id);\n        setName(specificItem.title);\n    };\n\n    useEffect(() => {\n        localStorage.setItem(\"list\", JSON.stringify(list));\n    }, [list]);\n\n    return (\n        <Container maxWidth=\"sm\">\n            <form onSubmit={handleSubmit}>\n                <TextField id=\"standard-basic\"\n                           label=\"Введите задачу\"\n                           value={name}\n                           fullWidth\n                           onChange={(e) => setName(e.target.value)}/>\n                <Button variant=\"contained\"\n                        size=\"small\"\n                        color=\"primary\"\n                        className={classes.margin}\n                        type=\"submit\">\n                    {isEditing ? \"Редактировать\" : \"Добавить\"}\n                </Button>\n            </form>\n            {list.length > 0 && (\n                <div className=\"task-body\">\n                    <Task items={list}\n                          removeItem={removeItem}\n                          editItem={editItem}/>\n                </div>\n            )}\n        </Container>\n    );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {App} from \"./App.js\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}